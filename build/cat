KELPv1
E@deps
E
/lib/liblua.so@sourcemap
18
main=./coreutils/cat.luamain
5D3
local function write(fd, data)
    local err = syscall("write", fd, data)
    return err == nil, err
end

local function read(fd, len)
    local err, data = syscall("read", fd, len)
    return data, err
end

local function main(argv)
    for i = 1, #argv do
        local path = argv[i];
        if path == "-" then
            while true do
                local line = read(1, 4096)
                if not line then break end
                write(0, line)
                coroutine.yield()
            end
            goto continue;
        end
        if io.exists(path) then
            local type = io.ftype(path)
            if type == "file" then
                local file = assert(io.open(path, "rb"));
                while true do
                    local data = file:read(4096);
                    if data == nil then
                        goto escape
                    end
                    write(0, tostring(data));
                    coroutine.yield();
                end
                ::escape::
                file:close();
            elseif type == "directory" then
                write(2, string.format("cat: %s: Is a directory", path));
            end
        else
            write(2, string.format("cat: %s: No such file or directory\n", path));
        end
        ::continue::
        coroutine.yield();
    end
end

local ok, err = xpcall(main, debug.traceback, arg);
if not ok then
    write(2, err .. "\n");
    os.exit(1);
end
os.exit(err or 0);
